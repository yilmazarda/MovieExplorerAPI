// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using movie_explorer.Data;

#nullable disable

namespace movie_explorer.Migrations
{
    [DbContext(typeof(MovieContext))]
    [Migration("20250902135906_ModelChange")]
    partial class ModelChange
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GenreMovie", b =>
                {
                    b.Property<int>("GenresTmdbId")
                        .HasColumnType("int");

                    b.Property<int>("MoviesTmdbId")
                        .HasColumnType("int");

                    b.HasKey("GenresTmdbId", "MoviesTmdbId");

                    b.HasIndex("MoviesTmdbId");

                    b.ToTable("GenreMovie");
                });

            modelBuilder.Entity("movie_explorer.Models.Genre", b =>
                {
                    b.Property<int>("TmdbId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TmdbId");

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("movie_explorer.Models.Movie", b =>
                {
                    b.Property<int>("TmdbId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Popularity")
                        .HasColumnType("real");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<float>("VoteAverage")
                        .HasColumnType("real");

                    b.Property<int>("VoteCount")
                        .HasColumnType("int");

                    b.HasKey("TmdbId");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("GenreMovie", b =>
                {
                    b.HasOne("movie_explorer.Models.Genre", null)
                        .WithMany()
                        .HasForeignKey("GenresTmdbId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("movie_explorer.Models.Movie", null)
                        .WithMany()
                        .HasForeignKey("MoviesTmdbId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
